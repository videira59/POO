#BlueJ class context
comment0.params=
comment0.target=Imoobiliaria()
comment1.params=imo
comment1.target=Imoobiliaria(Imoobiliaria)
comment10.params=
comment10.target=Imoobiliaria\ clone()
comment11.params=obj
comment11.target=boolean\ equals(java.lang.Object)
comment12.params=
comment12.target=java.lang.String\ toString()
comment13.params=
comment13.target=Imoobiliaria\ initApp()
comment14.params=utilizador
comment14.target=void\ registarUtilizador(Utilizador)
comment14.text=\ Fun\u00E7\u00E3o\ que\ adiciona\ um\ novo\ utilizador.\n\n@param\ utilizador\ utilizador\ a\ registar
comment15.params=email\ password
comment15.target=void\ iniciaSessao(java.lang.String,\ java.lang.String)
comment15.text=\ Fun\u00E7\u00E3o\ que\ valida\ o\ acesso\ \u00E0\ aplica\u00E7\u00E3o.\n\n\ \ @param\ email\ email\ do\ utilizador\n@param\ password\ password\ do\ utilizador
comment16.params=
comment16.target=void\ fechaSessao()
comment16.text=Fun\u00E7\u00E3o\ que\ fecha\ a\ sess\u00E3o\ atualmente\ iniciada
comment17.params=im
comment17.target=void\ registaImovel(Imovel)
comment17.text=\ Fun\u00E7\u00E3o\ que\ adiciona\ um\ novo\ imovel\ para\ venda\n\n@param\ im\ imovel\ a\ adicionar
comment18.params=
comment18.target=java.util.List\ getConsulta()
comment18.text=\ Fun\u00E7\u00E3o\ que\ devolve\ ao\ utilizador\ a\ lista\ das\ 10\ ultimas\ consultas\ dos\ imoveis\ que\ este\ tem\ para\ venda\n\n@return\ Lista\ das\ consultas
comment19.params=idImovel\ estado
comment19.target=void\ setEstado(java.lang.String,\ java.lang.String)
comment19.text=\ Fun\u00E7\u00E3o\ que\ muda\ o\ estado\ de\ um\ dado\ imovel\n\n\ \ @param\ idImovel\ id\ do\ imovel\ a\ mudar\ o\ estado\n@param\ estado\ Estado\ para\ o\ qual\ o\ imovel\ vai\ mudar
comment2.params=utilizador\ imoveis\ utilizadores
comment2.target=Imoobiliaria(Utilizador,\ java.util.Map,\ java.util.Map)
comment20.params=n
comment20.target=java.util.Set\ getTopImoveis(int)
comment20.text=\ Fun\u00E7\u00E3o\ que\ obtem\ o\ conjunto\ dos\ ids\ dos\ n\ imoveis\ mais\ consultados\n\n\ \ @param\ n\ numero\ de\ ids\ a\ serem\ devolvidos\n@return\ Conjunto\ dos\ ids
comment21.params=classe\ preco
comment21.target=java.util.List\ getImovel(java.lang.String,\ int)
comment21.text=\ Fun\u00E7\u00E3o\ que\ devolve\ todos\ os\ imoveis\ de\ um\ dado\ tipo\ e\ at\u00E9\ um\ dado\ pre\u00E7o\n\n\ \ @param\ classe\ tipo\ dos\ im\u00F3veis\n\ \ @param\ preco\ pre\u00E7o\ m\u00E1ximo\ dos\ im\u00F3veis\n@return\ lista\ dos\ imoveis
comment22.params=preco
comment22.target=java.util.List\ getHabitaveis(int)
comment22.text=\ Fun\u00E7\u00E3o\ que\ devolve\ todos\ os\ imoveis\ habitaveis\ at\u00E9\ um\ dado\ pre\u00E7o\n\n\ \ @param\ preco\ pre\u00E7o\ m\u00E1ximo\ dos\ im\u00F3veis\n@return\ lista\ dos\ im\u00F3veis\ habitaveis
comment23.params=
comment23.target=java.util.Map\ getMapeamentoImoveis()
comment23.text=\ Fun\u00E7\u00E3o\ que\ obtem\ o\ mapeamento\ entre\ todos\ os\ im\u00F3veis\ e\ o\ seu\ vendedor\n\n@return\ Mapeamento\ dos\ im\u00F3veis
comment24.params=
comment24.target=java.util.Set\ getFavoritos()
comment24.text=\ Fun\u00E7\u00E3o\ que\ devolve\ um\ set\ com\ os\ favoritos\ do\ utilizador\n@return\ Set\ com\ todos\ os\ imoveis\ favoritos
comment25.params=
comment25.target=void\ gravar()
comment3.params=
comment3.target=int\ getTipoUtilizador()
comment4.params=
comment4.target=Utilizador\ getUtilizador()
comment5.params=utilizador
comment5.target=void\ setUtilzador(Utilizador)
comment6.params=
comment6.target=java.util.Map\ getImoveis()
comment7.params=imoveis
comment7.target=void\ setImoveis(java.util.Map)
comment8.params=
comment8.target=java.util.Map\ getUtilizadores()
comment9.params=utilizadores
comment9.target=void\ setUtilizadores(java.util.Map)
numComments=26
